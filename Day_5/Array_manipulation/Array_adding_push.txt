Adding item to an array using push

Push: adding item in the end. To add item to the end of an existing array we use the push method.

        // syntax
        const arr  = ['item1', 'item2','item3']
        arr.push('new item')
        console.log(arr)
        // ['item1', 'item2','item3','new item']

        const numbers = [1, 2, 3, 4, 5]
        numbers.push(6)
        console.log(numbers) // -> [1,2,3,4,5,6]

        numbers.pop() // -> remove one item from the end
        console.log(numbers) // -> [1,2,3,4,5]

        let fruits = ['banana', 'orange', 'mango', 'lemon']
        fruits.push('apple')
        console.log(fruits)    // ['banana', 'orange', 'mango', 'lemon', 'apple']

        fruits.push('lime')
        console.log(fruits)   // ['banana', 'orange', 'mango', 'lemon', 'apple', 'lime']

Removing the end element using pop

    shift: Removing one array element in the beginning of the array.
        
        console.log("array.shift() - for removing an element from the beginning.")
        const numbers_1 = [1, 2, 3, 4, 5]
        console.log(numbers_1,"Before removing from the beginning element.")


        const numbers = [1, 2, 3, 4, 5]
        numbers.shift() // -> remove one item from the beginning
        console.log(numbers) // -> [2,3,4,5]

Add an element from the beginning

    unshift: Adding array element in the beginning of the array.

        const numbers = [1, 2, 3, 4, 5]
        numbers.unshift(0) // -> add one item from the beginning
        console.log(numbers) // -> [0,1,2,3,4,5]

Reversing array order

    reverse: reverse the order of an array.
        const numbers = [1, 2, 3, 4, 5]
        numbers.reverse() // -> reverse array order
        console.log(numbers) // [5, 4, 3, 2, 1]

        numbers.reverse()
        console.log(numbers) // [1, 2, 3, 4, 5]

Sorting elements in array

    sort: arrange array elements in ascending order. Sort takes a call back function,
    we will see how we use sort with a call back function in the coming sections.
        const webTechs = [
        'HTML',
        'CSS',
        'JavaScript',
        'React',
        'Redux',
        'Node',
        'MongoDB'
        ]

        webTechs.sort()
        console.log(webTechs) // ["CSS", "HTML", "JavaScript", "MongoDB", "Node", "React", "Redux"]

        webTechs.reverse() // after sorting we can reverse it
        console.log(webTechs) // ["Redux", "React", "Node", "MongoDB", "JavaScript", "HTML", "CSS"]


Array of arrays:
    Array can store different data types including an array itself. Let us create an array of arrays

        const firstNums = [1, 2, 3]
        const secondNums = [1, 4, 9]

        const arrayOfArray =  [[1, 2, 3], [1, 2, 3]]
        console.log(arrayOfArray[0]) // [1, 2, 3]

        const frontEnd = ['HTML', 'CSS', 'JS', 'React', 'Redux']
        const backEnd = ['Node','Express', 'MongoDB']
        const fullStack = [frontEnd, backEnd]
        console.log(fullStack)   // [["HTML", "CSS", "JS", "React", "Redux"], ["Node", "Express", "MongoDB"]]
        console.log(fullStack.length)  // 2
        console.log(fullStack[0])  // ["HTML", "CSS", "JS", "React", "Redux"]
        console.log(fullStack[1]) // ["Node", "Express", "MongoDB"]
Scope

Variable is the fundamental part in programming. We declare variable to store different data types. 
To declare a variable we use the key word var, let and const. A variable can be declared at different scope. In this section, 
we will see the scope variables, scope of variables when we use var or let. Variables scopes can be:

    Global
    Local

Variable can be declared globally or locally scope. We will see both global and local scope. 
Anything declared without let, var or const is scoped at global level.

Let us imagine that we have a scope.js file.

Window Global Object

    Without using console.log() open your browser and check, you will see the value of a and b if you write a or b on the browser.
    That means a and b are already available in the window.

        //scope.js
        a = 'JavaScript' // declaring a variable without let or const make it available in window object and this found anywhere
        b = 10 // this is a global scope variable and found in the window object
        function letsLearnScope() {
        console.log(a, b)
        if (true) {
            console.log(a, b)
        }
        }
        console.log(a, b) // accessible


Global scope

    A globally declared variable can be accessed every where in the same file. But the term global is relative. It can be global to the file or it can be global relative to some block of codes.

        //scope.js
        let a = 'JavaScript' // is a global scope it will be found anywhere in this file
        let b = 10 // is a global scope it will be found anywhere in this file
        function letsLearnScope() {
        console.log(a, b) // JavaScript 10, accessible
        if (true) {
            let a = 'Python'
            let b = 100
            console.log(a, b) // Python 100
        }
        console.log(a, b)
        }
        letsLearnScope()
        console.log(a, b) // JavaScript 10, accessible